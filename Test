package com.sbi.epay.notification.service;

import com.sbi.epay.logging.utility.LoggerFactoryUtility;
import com.sbi.epay.logging.utility.LoggerUtility;
import org.springframework.stereotype.Service;
import org.thymeleaf.TemplateEngine;
import org.thymeleaf.context.Context;

import java.util.Map;

/**
 * Class Name: EmailTemplateService
 * *
 * Description:EmailTemplateService is used for generatingEmailTemplateName by taking type and second it is generate email body using template name and content
 * *
 * Author: V1017903 (bhushan wadekar)
 * Copyright (c) 2024 [State Bank of India]
 * All rights reserved
 * *
 * Version:1.0
 */
@Service
public class EmailTemplateService {
    private final TemplateEngine templateEngine;
    LoggerUtility logger = LoggerFactoryUtility.getLogger(EmailService.class);

    /**
     * This constructor used for taking templateEngine
     *
     * @param templateEngine TemplateEngine
     */
    public EmailTemplateService(TemplateEngine templateEngine) {
        this.templateEngine = templateEngine;
    }

    /**
     * This Method to generate email body using template name and content
     *
     * @param template contain name of template
     * @param fieldValues  contain data we are set into template
     * @return emailbody
     */
    public String generateEmailBody(String template, Map<String, Object> fieldValues) {
        logger.info("Email creation started for template :{} and value {}", template, fieldValues);
        Context context = new Context();
        for (Map.Entry<String, Object> entry : fieldValues.entrySet()) {
            context.setVariable(entry.getKey(), entry.getValue());
        }
        logger.info("Email value setup for template :{} and value {}", template, fieldValues);
        return templateEngine.process(template, context);
    }
}
