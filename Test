protected ThemeDto buildPaymentPageThemeDto(String mId, MultipartFile logoFile, String primaryColor, String secondaryColor) {
        log.info("Building ThemeDto for mId: {}", mId);
        return ThemeDto.builder().mId(mId).logo(getBase64(logoFile))
                .primaryColor(primaryColor).secondaryColor(secondaryColor)
                .module(MerchantConstant.THEME_PAYMENT).build();
    }


  protected ThemeDto saveTheme(MultipartFile logoFile, String mId, String primaryColor, String secondaryColor, boolean isUpdate) {
        log.info("Saving theme for mId: {}, isUpdate: {}", mId, isUpdate);
        ThemeDto themeDto = buildPaymentPageThemeDto(mId, logoFile, primaryColor, secondaryColor);
        themeValidator.validateLogo(logoFile, isUpdate);
        if (isUpdate) {
            themeValidator.validateUpdateRequest(themeDto);
            log.info("Updating existing theme for mId: {}", mId);
            return themeDao.updatePaymentPageTheme(themeDto);
        }
        themeValidator.validateSaveRequest(themeDto);
        if(StringUtils.isAllEmpty(themeDto.getPrimaryColor(), themeDto.getSecondaryColor()))
            themeDto.setDefaultTheme(true);
        log.info("Creating new theme for mId: {}", mId);
        return themeDao.createPaymentPageTheme(themeDto);
    }
