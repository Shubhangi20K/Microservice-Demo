

@Service
@RequiredArgsConstructor
public class AdminService {

    private final OnboardingValidator onboardingValidator;
    private final AdminValidator adminValidator;
    private final AdminDao adminDao;
    private final MerchantEntityGroupMapper merchantEntityGroupMapper;
    private final MerchantMapper merchantMapper;
    private final HelpSupportService helpSupportService;
    private final MerchantBankService merchantBankService;
    private final LoggerUtility log = LoggerFactoryUtility.getLogger(this.getClass());
    private final MerchantUserValidator mIdValidator;

    public MerchantResponse<BankDetailsResponse> getBankDetailsByIfscCode(String ifscCode){
        log.info("Fetching bank details from DAO for IFSC Code: {}", ifscCode);
        BankDetailsResponse bankDetailsResponse = adminDao.getBankDetailsByIfscCode(ifscCode);
        log.info("Fetched bank details: {}", bankDetailsResponse);
        return MerchantResponse.<BankDetailsResponse>builder().data(List.of(bankDetailsResponse)).build();
    }



@Component
@RequiredArgsConstructor
public class AdminDao {

    private final LoggerUtility log = LoggerFactoryUtility.getLogger(this.getClass());

    private final MerchantRepository merchantRepository;
    private final MerchantUserDao merchantUserDao;
    private final MerchantEntityGroupRepository merchantEntityGroupRepository;
    private final MerchantMapper mapper;
    private final FooterRepository footerRepository;
    private final AdminServicesClient adminServicesClient;

    public BankDetailsResponse getBankDetailsByIfscCode(String ifsc) {
        log.info("Fetching bank details from external service for IFSC Code: {}", ifsc);
        return adminServicesClient.getBankDetailsByIfscCode(ifsc).getFirst();
    }

public class AdminServicesClient extends ApiClient {
    public List<BankDetailsResponse> getBankDetailsByIfscCode( String ifscCode) {
        return getList(BANK_ENDPOINT + "/" + ifscCode, new ParameterizedTypeReference<>() {});
    }
