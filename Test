@Service
@RequiredArgsConstructor
public class AdminService {

    private final OnboardingValidator onboardingValidator;
    private final AdminValidator adminValidator;
    private final AdminDao adminDao;
    private final MerchantEntityGroupMapper merchantEntityGroupMapper;
    private final MerchantMapper merchantMapper;
    private final HelpSupportService helpSupportService;
    private final MerchantBankService merchantBankService;
    private final LoggerUtility log = LoggerFactoryUtility.getLogger(this.getClass());
    private final MerchantUserValidator mIdValidator;

public MerchantResponse<BankResponse> getAllBanks(){
        log.info("Fetching all banks from DAO");
        List<BankResponse> bankResponseList = adminDao.getAllBanks();
        log.info("Fetched all banks: {}", CollectionUtils.size(bankResponseList));
        return MerchantResponse.<BankResponse>builder().data(bankResponseList).build();
    }




@Component
@RequiredArgsConstructor
public class AdminDao {

    private final LoggerUtility log = LoggerFactoryUtility.getLogger(this.getClass());

    private final MerchantRepository merchantRepository;
    private final MerchantUserDao merchantUserDao;
    private final MerchantEntityGroupRepository merchantEntityGroupRepository;
    private final MerchantMapper mapper;
    private final FooterRepository footerRepository;
    private final AdminServicesClient adminServicesClient;

    public List<BankResponse> getAllBanks() {
        log.info("Fetching all banks from external service");
        return adminServicesClient.getAllBanks();
    }



public class AdminServicesClient extends ApiClient {
    public List<BankResponse> getAllBanks() {
        return getList(BANK_ENDPOINT, new ParameterizedTypeReference<>() {});
    }
