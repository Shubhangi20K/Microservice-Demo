 */
@Repository
@RequiredArgsConstructor
public class MerchantBankDao {

    private final MerchantBankAccountRepository merchantBankAccountRepository;
    private final AlertDao alertDao;
    private final MerchantMapper mapper;
    private final MerchantConfig merchantConfig;

 protected void setMerchantAccountDBValueOnUpdate(MerchantBankAccount merchantBankAccount) {
        MerchantBankAccount dbMerchantBankAccount = getMerchantBankAccount(merchantBankAccount.getAccountUniqueIdentifier());
        merchantBankAccount.setId(dbMerchantBankAccount.getId());
        merchantBankAccount.setCreatedAt(dbMerchantBankAccount.getCreatedAt());
        merchantBankAccount.setCreatedBy(dbMerchantBankAccount.getCreatedBy());
    }

@Repository
@RequiredArgsConstructor
public class MerchantBankDao {

    private final MerchantBankAccountRepository merchantBankAccountRepository;
    private final AlertDao alertDao;
    private final MerchantMapper mapper;
    private final MerchantConfig merchantConfig;

    private MerchantBankAccount getMerchantBankAccount(String accountUniqueIdentifier) {
        return merchantBankAccountRepository.findByAccountUniqueIdentifier(accountUniqueIdentifier).orElseThrow(() -> new MerchantException(ErrorConstants.NOT_FOUND_ERROR_CODE, MessageFormat.format(ErrorConstants.NOT_FOUND_ERROR_MESSAGE, "Account Information")));
    }
