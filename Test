
@Component
@RequiredArgsConstructor
public class AdminDao {

    private final LoggerUtility log = LoggerFactoryUtility.getLogger(this.getClass());

    private final MerchantRepository merchantRepository;
    private final MerchantUserDao merchantUserDao;
    private final MerchantEntityGroupRepository merchantEntityGroupRepository;
    private final MerchantMapper mapper;
    private final FooterRepository footerRepository;
    private final AdminServicesClient adminServicesClient;
    private final MerchantEntityUserRepository merchantEntityUserRepository;


    public List<BranchResponse> getAllBranches(String bankId) {
        log.info("Fetching all branches for bank ID {} from external service", bankId);
        return adminServicesClient.getAllBranches(bankId);
    }


public class AdminServicesClient extends ApiClient {

    public static final String DOWNTIME_API_ENDPOINT = "/payMode/downtime";
    public static final String MERCHANT_PAYMODE_API = "/merchant/payMode/";
    public static final String BANK_ACCOUNT_VALIDATION = "/bank/validate";
    public static final String BANK_ENDPOINT = "/bank";
    public static final String BRANCH_DETAILS_ENDPOINT = "/bank/branch/";

    public static final String DATA = "data";
    public static final String PAY_MODES = "payModes";
    public static final String PREFERRED_OPTIONS = "preferredOptions";
    public static final String PAYMENT_OPTIONS = "otherPaymentOptions";
    public static final String INB = "INB";
    public static final String UPI = "UPI";
    public static final String UPI_KEY_BHIMQR = "BHIMQR";
    public static final String UPI_KEY_SELF = "self";

    private final ObjectMapper mapper = new ObjectMapper();
    public List<BranchResponse> getAllBranches(String bankId) {
        return getList(BRANCH_DETAILS_ENDPOINT + bankId, new ParameterizedTypeReference<>() {});
    }
