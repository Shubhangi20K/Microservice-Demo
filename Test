import com.hazelcast.core.HazelcastInstance;
import com.hazelcast.core.HazelcastJsonValue;
import com.hazelcast.map.IMap;
import com.hazelcast.map.QueryResultSizeExceededException;
import com.hazelcast.map.impl.query.QueryResultCollection;
import com.hazelcast.query.Predicates;
import com.sbi.epay.hazelcast.constants.HazelcastConstants;

import com.sbi.epay.hazelcast.exception.HazelcastException;
import com.sbi.epay.hazelcast.model.CacheableEntity;
import com.sbi.epay.hazelcast.model.EPayCachebleData;
import com.sbi.epay.hazelcast.model.HazelCastJsonValueData;
import com.sbi.epay.hazelcast.model.PredicateInput;

import com.sbi.epay.logging.utility.LoggerFactoryUtility;
import com.sbi.epay.logging.utility.LoggerUtility;
import org.springframework.stereotype.Service;

/**
 * This class is created for cache operations
 * <p>
 * Class Name: HazelcastService
 * *
 * Description:This class is used for cache operations
 * *
 * Author: V1018212(Hrishikesh Pandirakar)
 * Copyright (c) 2024 [State Bank of India]
 * All rights reserved
 * *
 * Version:1.0
 */
@Service
public class HazelcastService {
    public  CacheableEntity getDataByPredicate(PredicateInput predicateInput,HazelcastInstance hazelcastInstance) throws HazelcastException {
        try {
            log.debug("HazelcastService :: getDataByPredicate ");
            IMap<String, Object> myMap = hazelcastInstance.getMap(predicateInput.getMapName());
            QueryResultCollection queryResultCollection = (QueryResultCollection) myMap.values(predicateInput.getPredicate());
            EPayCachebleData ePayCacheableData = (EPayCachebleData) queryResultCollection.stream().iterator().next();
            return CacheableEntity.builder().key(predicateInput.getKey()).mapName(predicateInput.getMapName()).cacheableEntityData(ePayCacheableData).build();
        } catch (QueryResultSizeExceededException |NullPointerException e) {
            log.error("HazelcastService :: getDataByPredicate "+e.getMessage());
            throw new HazelcastException(HazelcastConstants.HAZELCAST_1004, HazelcastConstants.HAZELCAST_1004_MSG);
        }
    }
}
