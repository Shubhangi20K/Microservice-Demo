package com.epay.transaction.dao;

import com.epay.transaction.externalservice.request.payment.PaymentStatusRequest;
import com.epay.transaction.externalservice.request.payment.PaymentUPIVpaRequest;
import com.epay.transaction.model.response.EncryptedResponse;
import com.sbi.epay.authentication.providers.EPayTokenProvider;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

/**
 * DAO class responsible for handling UPI payment-related operations.
 */
@Component
@RequiredArgsConstructor
public class PaymentUPIDao {
    
    private static final Logger logger = LoggerFactory.getLogger(PaymentUPIDao.class);

    private final PaymentDao paymentDao;
    private final TokenDao tokenDao;
    private final EPayTokenProvider ePayTokenProvider;

    /**
     * Retrieves the encrypted AES key using the authentication token.
     *
     * @return Encrypted AES key as a String.
     */
    public String getEncryptedAESKey() {
        logger.info("Fetching encrypted AES key.");
        return tokenDao.getEncryptionAESKey(ePayTokenProvider.getToken());
    }

    /**
     * Validates the UPI payment VPA (Virtual Payment Address).
     *
     * @param paymentUPIVpaRequest Request object containing VPA details.
     * @param key                  Encryption key for securing the request.
     * @return EncryptedResponse containing the validation result.
     */
    public EncryptedResponse validateUPIPaymentVpa(PaymentUPIVpaRequest paymentUPIVpaRequest, String key) {
        logger.info("Validating UPI Payment VPA for request: {}", paymentUPIVpaRequest);
        return paymentDao.validateUPIPaymentVpa(paymentUPIVpaRequest, key);
    }

    /**
     * Performs a status enquiry for a UPI payment.
     *
     * @param paymentStatusRequest Request object containing payment status details.
     * @param key                  Encryption key for securing the request.
     * @return EncryptedResponse containing the status enquiry result.
     */
    public EncryptedResponse upiPaymentStatusEnquiry(PaymentStatusRequest paymentStatusRequest, String key) {
        logger.info("Performing UPI payment status enquiry for request: {}", paymentStatusRequest);
        return paymentDao.upiPaymentStatusEnquiry(paymentStatusRequest, key);
    }
}
