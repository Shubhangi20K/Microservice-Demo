

@Repository
@RequiredArgsConstructor
public class AlertDao {
    private final LoggerUtility log = LoggerFactoryUtility.getLogger(this.getClass());
    private final AlertMasterRepository alertMasterRepository;
    private final AlertManagementRepository alertManagementRepository;
    private final MerchantInfoDao merchantInfoDao;
    private final AlertMapper alertMapper;

    public void generateAlertForReport(ReportAlertDto reportAlertDto) {
        AlertMaster alertMasterData = alertMasterRepository.findByName(MerchantConstant.REPORT_GENERATION).orElseThrow(()-> new MerchantException(ErrorConstants.NOT_FOUND_ERROR_CODE, MessageFormat.format(ErrorConstants.NOT_FOUND_ERROR_MESSAGE, "Alert name  "+  MerchantConstant.REPORT_GENERATION)));
        AlertManagement alertManagement = AlertManagement.builder().alertId(alertMasterData.getId()).alertDescription(MessageFormat.format(alertMasterData.getDescription(), reportAlertDto.getReportName())).alertIdentifier(MerchantUtil.generateUnique12DigitNumber()).isViewed(false).mId(reportAlertDto.getMId()).build();
        log.info("generated Alert for ReportName: {}, mid : {}",reportAlertDto.getReportName(),reportAlertDto.getMId());
        alertManagementRepository.save(alertManagement);
    }


public interface AlertMasterRepository extends JpaRepository<AlertMaster, UUID> {
 Optional<AlertMaster> findByName(String reportName);

}


@NoRepositoryBean
public interface CrudRepository<T, ID> extends Repository<T, ID> {
    <S extends T> S save(S entity);
}
