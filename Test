@ExtendWith(MockitoExtension.class)
class AdminDaoTest {

    @InjectMocks
    private AdminDao adminDao;

    @Mock
    private MerchantRepository merchantRepository;
    @Mock
    private MerchantUserDao merchantUserDao;
    @Mock
    private MerchantEntityGroupRepository merchantEntityGroupRepository;
    @Mock
    private MerchantMapper mapper;
    @Mock
    private FooterRepository footerRepository;
    @Mock
    private AdminServicesClient adminServicesClient;
    @Mock
    private MerchantEntityUserRepository merchantEntityUserRepository;

    @Test
    void testGetBankDetailsByIfscCode() {
        // Arrange
        String ifsc = "HDFC0001234";
        BankDetailsResponse mockResponse = new BankDetailsResponse();
        mockResponse.setBankName("HDFC Bank");
        mockResponse.setBranch("Andheri");
        mockResponse.setIfsc(ifsc);

        List<BankDetailsResponse> responseList = List.of(mockResponse);

        Mockito.when(adminServicesClient.getBankDetailsByIfscCode(ifsc)).thenReturn(responseList);

        // Act
        BankDetailsResponse result = adminDao.getBankDetailsByIfscCode(ifsc);

        // Assert
        Assertions.assertNotNull(result);
        Assertions.assertEquals("HDFC Bank", result.getBankName());
        Assertions.assertEquals("Andheri", result.getBranch());
        Assertions.assertEquals(ifsc, result.getIfsc());

        // Verify
        Mockito.verify(adminServicesClient).getBankDetailsByIfscCode(ifsc);
    }
}
