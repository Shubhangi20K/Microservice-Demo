package com.epay.transaction.externalservice;

/*
 * Copyright (c) [2024] [State Bank of India]
 * All rights reserved.
 * <p>
 * Author:@V0000001(Shilpa Kothre)
 * Version:1.0
 */

import com.epay.transaction.client.ApiClient;
import com.epay.transaction.exceptions.TransactionException;
import com.epay.transaction.externalservice.request.merchant.UserValidationRequest;
import com.epay.transaction.externalservice.response.merchant.MerchantThemeResponse;
import com.epay.transaction.model.response.TransactionResponse;
import com.epay.transaction.util.TransactionErrorConstants;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpHeaders;
import reactor.core.publisher.Mono;

import java.net.URI;

public class MerchantServicesClient extends ApiClient {
    public static final String TOKEN_VALIDATION = "/validation/token";
    public static final String MERCHANT_VALIDATION = "/validation/user";
    public static final String PAYMENT_THEME = "/paymenttheme/";

    public MerchantServicesClient(String baseUrl) {
        super(baseUrl);
    }

    public TransactionResponse<Void> validateMerchantToken(String token) {
        HttpHeaders headers = prepareHttpHeaders();
        headers.set(HttpHeaders.AUTHORIZATION, token);
        URI uri = URI.create(getBaseUrl() + TOKEN_VALIDATION);
        return getWebClient().get().uri(uri).headers(httpHeaders -> httpHeaders.addAll(headers)).retrieve().onStatus(httpStatusCode -> httpStatusCode.is4xxClientError() || httpStatusCode.is5xxServerError(), clientResponse -> Mono.error(new TransactionException(TransactionErrorConstants.EXTERNAL_SERVICE_ERROR_CODE, TransactionErrorConstants.EXTERNAL_SERVICE_ERROR_MESSAGE))).bodyToMono(new ParameterizedTypeReference<TransactionResponse<Void>>() {
        }).block();
    }

    public TransactionResponse<String> validateMerchantUser(UserValidationRequest userValidationRequest) {
        return post(MERCHANT_VALIDATION, userValidationRequest, new ParameterizedTypeReference<>() {});
    }

    public TransactionResponse<MerchantThemeResponse> getMerchantPaymentTheme(String mId) {
        return get(PAYMENT_THEME + mId,new ParameterizedTypeReference<>() {});
    }


}
